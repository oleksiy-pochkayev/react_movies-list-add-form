{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Invalid/InvalidField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","InvalidField","field","NewMovie","state","newMovie","validation","isImgUrlValid","isImdbUrlValid","isTitleValid","isImdbIdValid","fieldName","regExp","test","setState","trim","length","movieCreate","props","addMovie","clearState","handleChange","event","target","name","value","this","invalidImdbUrl","invalidImgUrl","invalidImdbId","invalidTitle","onSubmit","preventDefault","htmlFor","required","classNames","form__invalid","type","id","onChange","onBlur","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2ea9622.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\n\ntype Props = {\n  field: string;\n};\n\nexport const InvalidField:React.FC<Props> = ({ field }) => {\n  return (\n    <div className=\"form__error\">\n      {`Incorrect ${field}`}\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\nimport { InvalidField } from '../Invalid/InvalidField';\nimport { Movie } from '../../interfaces/Movie';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  newMovie: Movie;\n  validation: boolean | null;\n  isImgUrlValid: boolean | null;\n  isImdbUrlValid: boolean | null;\n  isTitleValid: boolean | null;\n  isImdbIdValid: boolean | null;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    validation: false,\n    isImgUrlValid: null,\n    isImdbUrlValid: null,\n    isTitleValid: null,\n    isImdbIdValid: null,\n  };\n\n  validation = (fieldName: string) => {\n    // eslint-disable-next-line no-useless-escape\n    const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const {\n      imgUrl,\n      imdbUrl,\n      title,\n      imdbId,\n    } = this.state.newMovie;\n\n    if (fieldName === 'imgUrl') {\n      const isValidField = regExp.test(imgUrl);\n\n      if (isValidField) {\n        this.setState({ isImgUrlValid: true });\n      } else {\n        this.setState({ isImgUrlValid: false });\n      }\n    }\n\n    if (fieldName === 'imdbUrl') {\n      const isValidField = regExp.test(imdbUrl);\n\n      if (isValidField) {\n        this.setState({ isImdbUrlValid: true });\n      } else {\n        this.setState({ isImdbUrlValid: false });\n      }\n    }\n\n    if (fieldName === 'title') {\n      if (title.trim().length) {\n        this.setState({ isTitleValid: true });\n      } else {\n        this.setState({ isTitleValid: false });\n      }\n    }\n\n    if (fieldName === 'imdbId') {\n      if (imdbId.trim().length) {\n        this.setState({ isImdbIdValid: true });\n      } else {\n        this.setState({ isImdbIdValid: false });\n      }\n    }\n\n    this.setState(state => {\n      const isValid = (\n        state.isImdbUrlValid\n        && state.isImgUrlValid\n        && state.isTitleValid\n        && state.isImdbIdValid\n      );\n\n      return {\n        validation: isValid,\n      };\n    });\n  };\n\n  movieCreate = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    this.props.addMovie({\n      title: title.trim(),\n      description: description.trim().length > 0 ? description : 'No description',\n      imgUrl: imgUrl.trim(),\n      imdbUrl: imdbUrl.trim(),\n      imdbId: imdbId.trim(),\n    });\n\n    this.clearState();\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      newMovie: {\n        ...state.newMovie,\n        [name]: value,\n      },\n    }));\n  };\n\n  clearState = () => {\n    this.setState({\n      newMovie: {\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        title: '',\n      },\n\n      validation: false,\n      isImgUrlValid: null,\n      isImdbUrlValid: null,\n      isTitleValid: null,\n      isImdbIdValid: null,\n    });\n  };\n\n  render() {\n    const {\n      isImdbUrlValid,\n      isImgUrlValid,\n      isImdbIdValid,\n      isTitleValid,\n    } = this.state;\n\n    const invalidImdbUrl = isImdbUrlValid === false;\n    const invalidImgUrl = isImgUrlValid === false;\n    const invalidImdbId = isImdbIdValid === false;\n    const invalidTitle = isTitleValid === false;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.movieCreate();\n        }}\n      >\n        <label htmlFor=\"title\" className=\"form__label\">\n          Title:\n          {' '}\n          <input\n            required\n            className={classNames('form__field', { form__invalid: invalidTitle })}\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={this.state.newMovie.title}\n            onChange={this.handleChange}\n            onBlur={() => {\n              this.validation('title');\n            }}\n          />\n          {invalidTitle && <InvalidField field=\"title\" />}\n        </label>\n\n        <label htmlFor=\"description\" className=\"form__label\">\n          Description:\n          {' '}\n          <input\n            className=\"form__field\"\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            onChange={this.handleChange}\n            value={this.state.newMovie.description}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\" className=\"form__label\">\n          imgUrl:\n          {' '}\n          <input\n            required\n            className={classNames('form__field', { form__invalid: invalidImgUrl })}\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            value={this.state.newMovie.imgUrl}\n            onChange={this.handleChange}\n            onBlur={() => {\n              this.validation('imgUrl');\n            }}\n          />\n          {invalidImgUrl && <InvalidField field=\"link\" />}\n        </label>\n\n        <label htmlFor=\"imdbUrl\" className=\"form__label\">\n          imdbUrl:\n          {' '}\n          <input\n            required\n            className={classNames('form__field', { form__invalid: invalidImdbUrl })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            value={this.state.newMovie.imdbUrl}\n            onChange={this.handleChange}\n            onBlur={() => {\n              this.validation('imdbUrl');\n            }}\n          />\n          {invalidImdbUrl && <InvalidField field=\"link\" />}\n        </label>\n\n        <label htmlFor=\"imdbId\" className=\"form__label\">\n          imdbId:\n          {' '}\n          <input\n            required\n            className={classNames('form__field', { form__invalid: invalidImdbId })}\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            value={this.state.newMovie.imdbId}\n            onChange={this.handleChange}\n            onBlur={() => {\n              this.validation('imdbId');\n            }}\n          />\n          {invalidImdbId && <InvalidField field=\"imdbId\" />}\n        </label>\n\n        <button\n          type=\"submit\"\n          disabled={!this.state.validation}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './interfaces/Movie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie:Movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}